#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +nickserv +(id|identify|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}"
cmd_pass_register.return_code = ok
currentlylistening.arguments = "currentlylistening"
currentlylistening.command = "/exec -o ~/Sync/Programming/bash/weechat/currently_listening.sh"
currentlylistening.conditions = ""
currentlylistening.enabled = on
currentlylistening.hook = command
currentlylistening.post_action = none
currentlylistening.regex = ""
currentlylistening.return_code = ok
fileshare.arguments = "fileshare"
fileshare.command = "/exec -o ~/Sync/Programming/bash/backups/fileshare.sh ${tg_argv_eol1}"
fileshare.conditions = ""
fileshare.enabled = on
fileshare.hook = command
fileshare.post_action = none
fileshare.regex = "/\s/_/tg_argv_eol1"
fileshare.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
set_title_weather_buffer.arguments = ""
set_title_weather_buffer.command = "/buffer set title ${tg_message_nocolor};/buffer set localvar_set_buflist ${tg_message}"
set_title_weather_buffer.conditions = "${buffer.full_name} == exec.exec.weather && ${tg_message_nocolor} !~ ^\W && ${tg_message_nocolor} !~ (wttr\.in|@igor_chubin)"
set_title_weather_buffer.enabled = on
set_title_weather_buffer.hook = print
set_title_weather_buffer.post_action = none
set_title_weather_buffer.regex = "/.*/${tg_message_nocolor}/ /[^:]+:(.*)/${re:1}/tg_message"
set_title_weather_buffer.return_code = ok
setdict.arguments = "*,irc_in2_join"
setdict.command = "/set aspell.dict.irc.${server}.${channel} ${tg_signal_data}"
setdict.conditions = "${nick} == ${info:irc_nick,${server}} && ${channel} =~ [.-](fr|it|es)$ && ${aspell.dict.irc.${server}.${channel}} =="
setdict.enabled = on
setdict.hook = signal
setdict.post_action = none
setdict.regex = "/.*[.-](fr|it|es)$/${re:1}/"
setdict.return_code = ok
weather.arguments = "weather"
weather.command = "/exec -noflush -norc -noln -buffer weather curl -s http://wttr.in/${tg_argv_eol1}?lang=${aspell.dict.exec.exec.weather}"
weather.conditions = ""
weather.enabled = on
weather.hook = command
weather.post_action = none
weather.regex = "/\s/_/tg_argv_eol1"
weather.return_code = ok
weather_shortcut.arguments = "input_text_for_buffer"
weather_shortcut.command = ""
weather_shortcut.conditions = "${buffer[tg_modifier_data].full_name} == exec.exec.weather && ${tg_string_nocolor} !~ ^/"
weather_shortcut.enabled = on
weather_shortcut.hook = modifier
weather_shortcut.post_action = none
weather_shortcut.regex = "==(.*)==/weather ${re:1}"
weather_shortcut.return_code = ok
